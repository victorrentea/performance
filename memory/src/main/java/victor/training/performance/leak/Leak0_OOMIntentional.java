package victor.training.performance.leak;

import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import java.util.ArrayList;
import java.util.List;

@RestController
@RequestMapping("leak0")
public class Leak0_OOMIntentional {

    List<int[]> boom = new ArrayList<>();
  @GetMapping
  public String endpoint() {
//     throw new OutOfMemoryError("Unfortunately, throwing a new OutOfMemoryError does NOT generate a heapdump");
    /*while (true) */ boom.add(new int[1000_000]); //4MB = 4b x 1M
    return "done";
  }
}

/**
 * After an OOME a .hprof file is generated by JVM by startup flags:
 * -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/Users/victorrentea/workspace
 */
